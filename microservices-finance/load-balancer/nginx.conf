# üåê NGINX LOAD BALANCER CONFIGURATION
# Configuraci√≥n de balanceador de carga para microservicios

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # ================================
    # üìù BASIC CONFIGURATION
    # ================================
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    access_log /var/log/nginx/access.log main;
    
    # ================================
    # üöÄ PERFORMANCE OPTIMIZATIONS
    # ================================
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 100;
    
    # Compression
    gzip on;
    gzip_vary on;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # ================================
    # üéØ UPSTREAM SERVERS
    # ================================
    
    # API Gateway (single instance)
    upstream api_gateway {
        server api-gateway:8080 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    # Processing Service (multiple instances for load balancing)
    upstream processing_service {
        least_conn;
        server processing-service-1:8081 max_fails=3 fail_timeout=30s weight=1;
        server processing-service-2:8081 max_fails=3 fail_timeout=30s weight=1;
        keepalive 32;
    }
    
    # Notification Service (single instance)
    upstream notification_service {
        server notification-service:8082 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    # ================================
    # üîí SECURITY HEADERS
    # ================================
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # ================================
    # üì± MAIN SERVER BLOCK
    # ================================
    server {
        listen 80;
        server_name localhost;
        
        # Rate limiting
        limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
        limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
        
        # ================================
        # üè• HEALTH CHECKS
        # ================================
        location /health {
            proxy_pass http://api_gateway;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Health check specific settings
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
        }
        
        # ================================
        # üö™ API GATEWAY ROUTES
        # ================================
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://api_gateway;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Keep-alive connections
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
        }
        
        # ================================
        # üîê AUTHENTICATION ROUTES (Special rate limiting)
        # ================================
        location /api/auth/login {
            limit_req zone=login burst=5 nodelay;
            
            proxy_pass http://api_gateway;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Longer timeout for authentication
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        
        # ================================
        # ‚ö° DIRECT PROCESSING SERVICE (Heavy workloads)
        # ================================
        location /api/processing/ {
            # Remove /api prefix and forward to processing service
            rewrite ^/api/processing/(.*)$ /api/$1 break;
            
            proxy_pass http://processing_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Extended timeouts for heavy processing
            proxy_connect_timeout 60s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            # Larger buffers for processing results
            proxy_buffering on;
            proxy_buffer_size 8k;
            proxy_buffers 16 8k;
            proxy_busy_buffers_size 16k;
        }
        
        # ================================
        # üîî DIRECT NOTIFICATION SERVICE
        # ================================
        location /api/notifications/ {
            # Remove /api prefix and forward to notification service
            rewrite ^/api/notifications/(.*)$ /api/$1 break;
            
            proxy_pass http://notification_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Standard timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # ================================
        # üìä MONITORING & METRICS
        # ================================
        location /metrics {
            proxy_pass http://api_gateway/metrics;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            # Restrict access (in production, add IP whitelist)
            # allow 192.168.1.0/24;
            # deny all;
        }
        
        # ================================
        # üìÅ STATIC FILES & ROOT
        # ================================
        location / {
            proxy_pass http://api_gateway;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # ================================
        # ‚ùå ERROR PAGES
        # ================================
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
    
    # ================================
    # üìä STATUS & MONITORING SERVER
    # ================================
    server {
        listen 8080;
        server_name localhost;
        
        location /nginx_status {
            stub_status on;
            access_log off;
            
            # Restrict access in production
            # allow 127.0.0.1;
            # allow 192.168.1.0/24;
            # deny all;
        }
    }
}
